{"CSS/CSS-Chat-Bubbles":{"title":"CSS Chat Bubbles","links":[],"tags":["initié"],"content":"Source: Codepen par Jason Founts\n\n  See the Pen \n  Chat Bubbles in CSS by Jason Founts (@Founts)\n  on CodePen.\n\n"},"CSS/CSS-Cheatsheet":{"title":"CSS Basics Cheatsheet","links":["CSS/Responsive","CSS/Flex","CSS/Grid","CSS/Sticky","CSS/webfonts"],"tags":["cheatsheet","débutant"],"content":"Ceci est une liste non-exhaustive des propriétés de base pour styliser, positionner des éléments.\nEspacements et dimensions §\n/* Padding */\ndiv{\n  padding-top: 20px;\n  padding-right: 20px;\n  padding-bottom: 20px;\n  padding-left: 20px;\n  padding: 20px;\n  padding: 0 20px; \n  padding: 0 20px 5px 10px; \n}\n \n/* Margin */\ndiv{\n  margin-top: 20px;\n  margin-right: 20px;\n  margin-bottom: 20px;\n  margin-left: 20px;\n  margin: 20px;\n  margin: 0 20px; \n  margin: 0 20px 5px 10px; \n}\n \n/* Hauteur/Largeur */\ndiv{\nheight:300px;  /* 100%; 100vh; 100em; Unités responsive */\nwidth:300px; /* 100%; 100vw; 100em; Unités responsive */\n}\n \nPour en savoir plus sur les unités relatives, voir Responsive\nDisplay §\ndiv{\ndisplay:none;         /* l&#039;élément est complètement retiré. */\ndisplay:block;        /* affiche l&#039;élément comme un bloc sur une nouvelle ligne, prend toute la largeur */\ndisplay: inline;      /* affiche l&#039;élément dans la même ligne */\ndisplay:inline-block; /* affiche l&#039;élément dans la même ligne, peut recevoir des valeurs de hauteur et largeur */\ndisplay: inherit;     /* hérite la propriété de son élément parent */\n}\n \n \nIl en existe d’autres plus avancés, pour cela, voir FlexGrid\nListe exhaustive sur MDN Display\nPosition §\nLa propriété CSS position définit la façon dont un élément est positionné dans un document. Les propriétés top, right, bottom et left déterminent l’emplacement final de l’élément positionné.\ndiv{\nposition: static;\n/* Comportement normal (par défaut). L&#039;élément est alors positionné dans le flux avec sa position. */\n \nposition: fixed;\n/* L&#039;élément est retiré du flux normal et aucun espace n&#039;est laissé pour l&#039;élément. L&#039;élément est positionné relativement au bloc englobant initial formé par la zone d&#039;affichage (viewport) */\n \n \nposition: absolute;\n/* L&#039;élément est retiré du flux normal et aucun espace n&#039;est créé pour l&#039;élément sur la page. Il est ensuite positionné par rapport à son ancêtre le plus proche qui est positionné s&#039;il y en a un ou par rapport au bloc englobant initial sinon. La position finale de l&#039;élément est déterminée par les valeurs de top, right, bottom et left. */\n \n \nposition: relative;\n/* L&#039;élément est positionné dans le flux normal du document puis décalé, par rapport à lui-même, selon les valeurs fournies par top, right, bottom et left.  */\n \n}\nPour en savoir plus MDN Position\nIl existe également position:sticky; à voir ici Sticky\nTexte §\np{\nfont-family: arial;\nfont-style: italic;\nfont-weight: bold;\nfont-weight: 100;     /* 200; 300; etc. Du plus light au plus bold*/\nfont-size:  24px;     /* 3em; 3rem; */\ntext-align: center;   /* ou left; right; justify; */\nline-height: 24px;    /* 1; 2rem; */\nletter-spacing: 2px;  /* 0.05em; */\n \n}\nPour plus d’informations, voir webfonts\nCouleurs §\np{\ncolor:red;        /* couleur du texte */\nbackground-color: red;    /* couleur de l&#039;arrière-plan; */\n \n}\nLes couleurs peuvent être choisis avec soit:\n\nun nom de couleur websafe,\nun code hexadécimal,\nune valeur rgb (red-green-blue),\nune valeur rgba (avec opacité inclue).\n"},"CSS/CSS-Introduction":{"title":"CSS Introduction","links":["HTML","Javascript","CSS/CSS-Cheatsheet"],"tags":["débutant","essentiels"],"content":"CSS: Cascading Style Sheets §\nLe CSS fait parti des trois languages de programmation pour le web avec le HTML et le Javascript.\nSi l’on utilise la métaphore d’une maison, on peut imaginer les trois langages comme répondant aux affirmations suivantes:\n\nHTML (Hypertext Markup Language): Quelle est la structure de la maison et ce qu’elle contient? Les portes, fenêtres, pièces…\nCSS (Cascading Style Sheets): A quoi ressemble la maison? Les peintures, textiles, revêtements…\nJS (Javascript): Comment utilise-t’on la maison? Le chauffage, la lumière…\n\nOn utilise le CSS pour mettre en forme graphiquement le site internet: définir les couleurs, la typographie, adapter le design au format des navigateurs sur ordinateur, tablette, téléphone.\n\nSélecteurs §\nPour se servir du CSS, il faut définir la balise HTML que l’on veut styliser. Pour cela, on utilise des sélecteurs. Un sélecteur en CSS peut être un nom de balise, un id ou une class (cf. attributs html)\nh1 { }      /* balise de titre h1 */\n#logo { }   /* balise d&#039;id &#039;logo&#039;*/\n.news { }   /* balise de class &#039;news&#039;*/\nChaque sélecteur est suivi d’accolades {} à l’intérieur desquelles on peut mettre les styles à appliquer.\n\nDéclarations §\nPour appliquer un style à un élément, on doit le déclarer. Une déclaration consiste d’une propriété et sa valeur, qui s’écrivent de la manière suivante:\ncolor: red; /*on déclare la propriété &#039;couleur&#039; de valeur &#039;rouge&#039; au sélecteur*/\n\n\n                  \n                  Tip \n                  \n                \nnom: valeur;\nDans une déclaration CSS, un nom de propriété est toujours suivi de deux points :, suivi de la valeur, puis d’un point virgule ;\n\nValeurs §\nUne valeur peut être définie:\n\nen mots-clés: red\nen chiffres et unités: 200px\nen code de couleurs: rgb(255,0,0)\n\n\nApplication §\nUne fois le sélecteur et les déclarations mis ensemble cela nous donne:\n/*une seule déclaration*/\nh1 { \n  color: red; \n}\n \n/*plusieurs déclarations*/\nh1 { \n  font-size: 2rem;\n  line-height: 1.2;\n  text-decoration: underline;\n  color: blue; \n}\n \nTrois manières d’appliquer du CSS à du HTML §\n\nInline: en utilisant un attribut style dans une balise HTML\nInterne: en utilisant un élément style dans la section head de votre fichier HTML\nExterne: en utilisant un fichier .CSS distinct, relié à votre fichier HTML\n\n&lt;!-- Dans un fichier HTML --&gt;\n&lt;!-- 1. Inline --&gt;\n&lt;h1 style=&quot;color:red&quot;&gt;Titre&lt;/h1&gt;\n \n&lt;!-- 2. Interne --&gt;\n&lt;head&gt;\n  &lt;style&gt;\n    h1 {\n      color:red;\n    }\n  &lt;/style&gt;\n&lt;/head&gt;\n \n&lt;!-- 3. Externe --&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt;\n  &lt;/head&gt;\n&lt;/html&gt;\n \nDéclarer un style à un sélecteur de classe: §\nDans le fichier html:\n&lt;h2 class=&quot;section-title&quot;&gt;Titre de section&lt;/h1&gt;\nDans le fichier css:\n.section-title{\n    font-size: 2rem;\n    color: pink;\n}\nDéclarer un style à un sélecteur d’identifiant: §\nDans le fichier html:\n&lt;h1 id=&quot;page-title&quot;&gt;Grand Titre&lt;/h1&gt;\nDans le fichier css:\n.page-title{\n    font-size: 1rem;\n    color: pink;\n}\n\n\n                  \n                  Warning \n                  \n                \nun ID prend le dessus sur une CLASS (voir plus bas)\n\nDéclarer un style avec des combinateurs: §\nSélecteur de voisin direct §\nA + B\nPermet de sélectionner les nœuds qui suivent immédiatement un élément donné.\nSélecteur de voisins §\nA ~ B\nPermet de sélectionner les nœuds qui suivent un élément et qui ont le même parent.\nSélecteur d’éléments enfants §\nA &gt; B\nPermet de sélectionner les nœuds qui sont des enfants directs d’un élément donné.\nSélecteur d’éléments descendants §\nA B\nPermet de sélectionner les nœuds qui sont des descendants (pas nécessairement des enfants directs) d’un élément donné.\nPlus d’informations sur les sélecteurs ici: Mozilla Web Docs: Sélecteurs CSS\n!important §\nIl est possible d’appliquer à la suite d’une valeur !important pour que celle-ci prenne la plus haute spécificité. Ce qui écrase toutes les autres valeurs à priori plus spécifique initialement. Ceci n’est cependant pas une bonne pratique, et doit être évité à tout prix, sauf en cas de dernier recours.\n\nCascade §\nLe CSS fonctionne en cascade, c’est-à-dire que les styles définis plus tard prennent le dessus sur ceux définis plus tôt dans un fichier CSS.\nIl est bonne pratique d’être moins spécifique dans votre CSS. Utilisez plutôt les HTML TAGS et les CLASS que les ID pour styliser, et utilisez les combinateurs uniquement en cas de dernier recours.\nUn élément visé plus spécifiquement qu’un autre écrasera le style de celui moins spécifique.\nPar défaut, la dernière déclaration est lue par l’ordinateur. Si vous répétez accidentellement la même déclaration et différentes valeurs, seulement la dernière valeur sera rendue.\n\nBox Model §\nTous les éléments HTML d’un site peuvent être considéré comme des boites. On parle de Box Model en CSS lorsqu’on parle de la mise en page et design d’un site. Cela nous permet de définir des bordures à des éléments, l’espace entre chaque, etc.\n\nMargin: espace externe autour d’un élément\nBorder: bordure autour des marges internes d’un élément\nPadding: espace interne autour du contenu d’un élément.\n\n\n\nConnecter un fichier CSS à un fichier HTML §\nUn fichier CSS possède une extension de fichier en .css et contient uniquement des sélecteurs et déclarations. Il est bonne pratique de créer dans un même dossier un fichier CSS style.css, séparé du fichier index.html pour stocker tout cela.\nDans ce cas, il faut mettre dans la head du ìndex.html la balise suivante:\n&lt;link rel=&quot;stylesheet&quot; href=&quot;/style.css&quot;&gt;\n\nPages liées §\nCSS-Cheatsheet\n\nRessources Externes CSS §\n\nCSS Tricks\nMDN\n"},"CSS/Flex":{"title":"Flex CSS","links":[],"tags":["initié"],"content":"Flexbox est une manière de mettre en page les éléments en colonnes et ajuster leurs alignements. Les dimensions des éléments s’adaptent (s’étendent) pour remplir un espace supplémentaire ou rétrécissent pour s’adapter à des espaces plus petits.\nExemple basique §\nDans une section avec 3 enfants, nous voudrions 3 colonnes:\n&lt;section id=&quot;intro&quot;&gt;\n  &lt;div&gt;Premiere&lt;/div&gt;\n  &lt;div&gt;Deuxieme&lt;/div&gt;\n  &lt;div&gt;Troisieme&lt;/div&gt;\n&lt;/section&gt;\nDans notre document style.css, on déclare display:flex; à notre section\nsection#intro {\n  display: flex;\n}\nLes trois blocs enfants passent en colonnes!\n\nExemple largeur égale §\nDans le premier exemple, chaque colonne prends la largeur de son contenu. Pour qu’elles prennent la même largeur, nous pouvons utiliser flex dans chaque colonne:\n&lt;section id=&quot;intro&quot;&gt;\n  &lt;div class=&quot;col&quot;&gt;Premiere&lt;/div&gt;\n  &lt;div class=&quot;col&quot;&gt;Deuxieme&lt;/div&gt;\n  &lt;div class=&quot;col&quot;&gt;Troisieme&lt;/div&gt;\n&lt;/section&gt;\nsection#intro {\n  display: flex;\n}\n.col {\n  flex: 1;\n}\nEn donnant à flex la valeur 1, nous disons que chaque colonne a le poids/importance de 1.\n\nExemple largeur inégale: §\nPour obtenir une valeur inégale sur une colonne, il suffit de modifier son flex individuellement (en ajoutant une classe):\n&lt;section id=&quot;intro&quot;&gt;\n  &lt;div class=&quot;col&quot;&gt;Premiere&lt;/div&gt;\n  &lt;div class=&quot;col large&quot;&gt;Deuxieme&lt;/div&gt;\n  &lt;div class=&quot;col&quot;&gt;Troisieme&lt;/div&gt;\n&lt;/section&gt;\nsection#intro {\n  display: flex;\n}\n.col {\n  flex: 1;\n}\n.col.large {\n  flex: 3;\n}\n\nEn donnant à la grande colonne la valeur de 3, elle a donc la taille de 3 à 1 par rapport aux autres frères et sœurs.\n\n\n                  \n                  Note \n                  \n                \nPour qu’une colonne s’adapte à son contenu, il faut lui donner une valeur de flex: 0;\n\nRessources §\nPour plus d’informations sur flexbox, comme toujours, MDN Web Docs\nPour pratiquer le positionnement d’éléments en utilisant Flex, voir la ressource suivante"},"CSS/Grid":{"title":"Grid CSS","links":[],"tags":["initié"],"content":"Todo"},"CSS/Responsive":{"title":"Responsive","links":[],"tags":["initié"],"content":"On peut accéder au web depuis n’importe quel type d’appareil. Pour designer une page web, il faut donc prendre en compte qu’on ne design pas que pour un seul moment mais une infinité.\nPar exemple: un design sur écran d’ordinateur avec plusieurs colonnes ne pourra peut être tenir qu’une colonne sur écran de téléphone à la fois, ainsi les colonnes se superposent de haut en bas sur mobile, alors qu’elles se suivent de gauche à droite sur desktop.\nEn CSS, pour définir différentes mises en pages nous utilisons des media queries dans lesquelles nos déclarations CSS peuvent contenir des sélecteurs ayant des valeurs différentes.\nAussi, on peut utiliser des unités “responsive” autres que le pixel. Par exemple le pourcentage (%), etc. (Voir plus bas)\nMedia Query §\nLes media queries (requêtes de media) permettent de définir des breakpoints (points de changements). Ces points de changement indiquent à quel moment le design doit s’adapter à une nouvelle taille d’écran. Par exemple: si l’écran est plus petit que 1000px.\nDans un document CSS cela ressemble à ceci:\n/* CSS par défaut (desktop)  */\nsection {\n  background: red;\n  width: 100%;\n  padding: 1em;\n}\n \n/* CSS pour écran plus petit que 768px (téléphones) */\n@media only screen and (max-width:768px) {\n  section {\n    background: green;\n  }\n}\n \nNous pouvons appliquer des changements à n’importe quelle déclaration CSS, tout est possible: couleurs, dimensions, typographie, etc. Notez cependant qu’il n’est pas nécessaire de répéter vos valeurs par défaut, seules celles changeant importent.\nIl est bonne pratique de placer les media queries à la fin de votre document css pour mieux vous y retrouver entre le CSS de base et celui spécifique à un/des media queries.\nBreakpoints §\nLorsque l’on designe pour le web, nous utilisons généralement 3 breakpoints:\n\nordinateurs               (&gt; 1024px)\ntablettes                 (&lt; 1020px&gt;)\nsmartphones / téléphones  (&lt;768px&gt;)\n\nEn CSS cela prends la forme suivante:\n/* Desktop */\nsection {\n  background: red;\n}\n \n/* Tablet */\n@media only screen and (max-width:1024px) {\n  section {\n    background: blue;\n  }\n}\n \n/* Mobile */\n@media only screen and (max-width:768px) {\n  section {\n    background: yellow;\n  }\n}\nPour en savoir plus: MDN Web Docs\nUnités responsive §\nem et rem §\nem (emphemeral unit) et rem (root empheral unit) sont deux unités de mesures flexibles traduites par votre navigateur en pixels. Elles dépendent de la taille de police utilisée par votre navigateur.\nPar défaut la taille de police d’un navigateur est de 16px. Si l’on voudrait associer un padding d’1em autour d’un bloc de texte et une taille de texte de 2rem, cela donnerait la formule suivante:\n1 em = 1 * 16px\n2 rem = 2 * 16px\nLa différence entre les unités de mesure em et rem réside uniquement dans la manière dont le navigateur va traduire leur valeur en pixels.\nJe vous recommende d’utiliser le rem.\nPour en savoir plus \nvh et vw §\nvh (viewport height) et vw (viewport width) correspondent à un pourcentage en hauteur (vh) et largeur (vw) de l’écran. On utilise très peu cette unité pour mettre en page le texte, plutôt pour les dimensions de blocs."},"CSS/Sticky":{"title":"Sticky CSS","links":[],"tags":["initié"],"content":"&lt;nav class=&quot;sticky&quot;&gt;\n  &lt;ul&gt;\n    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;partie 1&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;partie 2&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt;&lt;a href=&quot;#&quot;&gt;partie 3&lt;/a&gt;&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/nav&gt;\n.sticky{\n  position: sticky;\n  top: 0;\n \n}\nPlus d’informations sur W3Schools"},"CSS/index":{"title":"CSS Index","links":[],"tags":[],"content":""},"CSS/variablefonts":{"title":"Variable Fonts Web","links":["CSS/webfonts"],"tags":["initié","essentiels"],"content":"Les fontes variables permettent de rassembler plusieurs variantes d’une police dans un seul fichier .otf plutôt qu’un fichier par graisse/style comme c’est communément le cas. Leur utilisation en CSS est similaire aux webfonts classiques mais possèdent des propriétés CSS supplémentaires.\nLeur fonctionnement est basé sur la notion d’axe de variation, qui définit un intervale avec les valeurs minimales et maximales possible sur une propriété comme la largeur ou la graisse par exemple.\nIl existe actuellement 5 axes de variations possibles:\n\nle corp\nla largeur\nla pente\nl’italique\nla taille optique.\n\nÉpaisseur §\nLa graisse (représenté par l’étiquette wght) définit l’épaisseur des traits formants les caractères.\nfont-weight: 375; /* valeur entre 1 et 1000 */\n/* ou */\nfont-variation-settings: &quot;wght&quot; 375;\n \nLargeur §\nLa largeur (indiquée par l’étiquette wdth) correspond à l’axe selon lequel les caractères sont plus ou moins étroits ou larges.\nfont-stretch: 115%; \n/* En dessous de 100%: stretch\nEn dessus de 100%: extend */\n \nfont-variation-settings: &quot;wdth&quot; 115;\n \n## Italic\nL’axe italique (ital) fonctionne différemment car il ne s’agit pas d’un intervalle mais d’une option activée ou désactivée : il n’y a pas de valeurs intermédiaires.\nOn notera l’apparition de la propriété font-synthesis: none; qui empêche les navigateurs de synthétiser l’italique en penchant les caractères (on pourra aussi utiliser cette valeur de façon équivalente pour éviter de synthétiser la graisse).\nfont-style: italic;\n \nfont-variation-settings: &quot;ital&quot; 1; /* on/off uniquement */\n \nfont-synthesis: none;\n \nPente (Slant) §\nOn notera l’apparition de la propriété font-synthesis: none; qui empêche les navigateurs de synthétiser l’italique en penchant les caractères (on pourra aussi utiliser cette valeur de façon équivalente pour éviter de synthétiser la graisse).\nfont-style: oblique 14deg;\n \nfont-variation-settings: &quot;slnt&quot; 14;\n \nTaille optique §\nTo do\nSource: MDN Web Docs"},"CSS/webfonts":{"title":"Fontes Web","links":["CSS/CSS-Introduction"],"tags":["débutant","essentiels"],"content":"Tout le monde n’a pas les mêmes polices de caractères installées sur son ordinateur, tablette ou téléphone. C’est pourquoi sur un site internet, quand on veut utiliser une police spécifique, il faut l’inclure dans les fichiers du site.\n\nfont-family §\nNous avons vu dans CSS Introduction comment déclarer des styles CSS. Pour appliquer une police à un style, on utilise la déclaration font-family.\np {\n  font-family: Helvetica, Arial, sans-serif;\n}\nfont-family peut recevoir plusieurs noms de famille de polices, ce qui permet au navigateur de charger la première valeur disponible trouvée. Il est bonne pratique de toujours prévoir au minimum une seconde valeur au cas où un bug de chargement empêcherait d’utiliser la fonte choisie.\nCi-dessus, si Helvetica n’était toutefois pas disponible, alors Arial serait utilisé.\n\nFontes Web-safe §\n\nIl existe des fontes dont la disponibilité est garantie sur tous les systèmes courants — c’est les polices dites Web-safe. Mais il en existe qu’une partie. Arial en fait partie, parmi d’autres: Arial, courier, georgia, times new roman, trebuchet, verdana.\nOn peut aussi utiliser des noms générique: sans-serif, serif, monospace, cursive, fantasy\nLa pile de polices dans font-family vous permet de préciser la police préférable, puis la police alternative sûre pour le Web, puis la police par défaut du système, mais cela induit du travail supplémentaire de tests pour s’assurer que le désign reste correct avec chaque police, etc.\n\nFichier §\nUne fois que vous avez une font choisie pour votre site, récupérez le fichier. Celui-ci peut être dans différents format: .otf, .woff, .woff2, .ttf.\nPour intégrer votre font dans votre projet de site, il faut avoir ce fichier font dans le même dossier que vos fichiers HTML et CSS.\nChaque fichier font correspond à une graisse. Pour chaque nouvelle graisse à utiliser il faudra les fichiers correspondants.\n\n@font-face §\n@font-face permet de spécifier l’intégration de fichiers font dans un projet web.\nIl faut pour cela déclarer au minimum font-family et la src (source) du fichier.\nIl est bonne pratique de mettre ceci tout au début du fichier style.css.\n@font-face {\n  font-family: &quot;myFont&quot;;\n  src: url(&quot;myFont.woff2&quot;);\n}\nUne fois votre font importée dans le css, vous pouvez l’appliquer où vous le souhaitez.\np {\n  font-family: &quot;myFont&quot;, arial, sans-serif;\n}\n\nDroits d’auteur §\n\n\n                  \n                  Warning \n                  \n                \nAttention à toujours vérifier d’avoir les droits d’utilisation d’une police avant la mise en ligne d’un projet de site web.\n"},"HTML/Breadcrumb":{"title":"Breadcrumb (Fil d'ariane)","links":[],"tags":["débutant"],"content":"La navigation avec un fil d’Ariane (breadcrumb) permet à un utilisateur de comprendre l’emplacement auquel il se trouve au sein du site web en fournissant un fil d’Ariane permettant de revenir à la page de départ.\n\n&lt;nav aria-label=&quot;Breadcrumb&quot; class=&quot;breadcrumb&quot;&gt;\n    &lt;ul&gt;\n        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Category&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Sub Category&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=&quot;#&quot;&gt;Type&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;span aria-current=&quot;page&quot;&gt;Product&lt;/span&gt;&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/nav&gt;\nSource: MDN Web Docs"},"HTML/Forms":{"title":"Formulaires","links":[],"tags":["avancé"],"content":"Todo"},"HTML/HTML-Cheatsheet":{"title":"HTML Cheatsheet","links":["HTML/Scroll-to-Anchor"],"tags":["cheatsheet","débutant"],"content":"Source: Site web de Paul Copplestone\nDocument §\n&lt;!DOCTYPE html&gt; &lt;!-- Spécifier que le document est en HTML5  --&gt;\n&lt;html&gt;&lt;/html&gt; &lt;!-- contient la page entière  --&gt;\n&lt;head&gt;&lt;/head&gt; &lt;!-- Pour les metadata de la page  --&gt;\n&lt;body&gt;&lt;/body&gt; &lt;!-- Contient tout ce qui est visible dans la page  --&gt;\n\nOuvrir l&#039;exemple\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;!-- Metadata ici --&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;!-- Contenu visible ici --&gt;\n    &lt;body&gt;\n&lt;/html&gt;\n\n\nStructure §\n&lt;nav&gt;&lt;/nav&gt; &lt;!-- Conteneur pour votre navigation  --&gt;\n&lt;section&gt;&lt;/section&gt; &lt;!-- Sections  --&gt;\n&lt;div&gt;&lt;/div&gt; &lt;!-- Balise pour grouper des éléments --&gt;\n&lt;span&gt;&lt;/span&gt; &lt;!-- Balise pour envelopper des éléments alignés --&gt;\n&lt;footer&gt;&lt;/footer&gt; &lt;!-- Conteneur pour votre bas de page  --&gt;\n\nOuvrir l&#039;exemple\n&lt;body&gt;\n    &lt;nav&gt;&lt;/nav&gt;\n    &lt;section&gt;\n        &lt;div&gt;Some content&lt;div&gt;\n        &lt;div&gt;Some other content&lt;div&gt;\n    &lt;/section&gt;\n    &lt;section&gt;\n        &lt;div&gt;\n            &lt;span&gt;More&lt;/span&gt; &lt;span&gt;content&lt;/span&gt;\n        &lt;div&gt;\n    &lt;/section&gt;\n    &lt;footer&gt;\n        &lt;div&gt;Logo&lt;/div&gt;\n        &lt;div&gt;Links&lt;/div&gt;\n    &lt;/footer&gt;\n&lt;body&gt;\n\n\nContenu §\nTitrages §\n&lt;h1&gt;Heading 1&lt;/h1&gt;  &lt;!-- Un seul dans la page, titre de page --&gt;\n&lt;h2&gt;Heading 2&lt;/h2&gt;  &lt;!-- Titre de section --&gt;\n&lt;h3&gt;Heading 3&lt;/h3&gt;  &lt;!-- Titres de sous-section --&gt;\n&lt;h4&gt;Heading 4&lt;/h4&gt;  &lt;!-- ... --&gt;\n&lt;h5&gt;Heading 5&lt;/h5&gt;\n&lt;h6&gt;Heading 6&lt;/h6&gt;\nBody content §\n&lt;p&gt;Paragraphe&lt;/p&gt;\n&lt;strong&gt;Texte Bold&lt;/strong&gt;\n&lt;em&gt;Texte Italic&lt;/em&gt;\n&lt;blockquote&gt;Une citation/callout&lt;/blockquote&gt;\n&lt;code&gt;Ligne de code&lt;/code&gt;\n&lt;pre&gt;A bloc multiligne de code&lt;/pre&gt;\n&lt;br&gt; &lt;!-- Un saut de ligne --&gt;\n&lt;hr&gt; &lt;!-- Une barre horizontale --&gt;\n \nBalises spéciales §\n&lt;!-- Liens (Anchor) --&gt;\n&lt;a href=&quot;/your/web/page&quot;&gt;Link name&lt;/a&gt; &lt;!-- Lien vers une page interne à votre site  --&gt;\n&lt;a href=&quot;http://example.com&quot;&gt;Link name&lt;/a&gt; &lt;!-- Lien vers une page externe sur le web  --&gt;\n \n \n&lt;!-- Images --&gt;\n&lt;img src=&quot;/your/image.jpg&quot; alt=&quot;Some image description&quot; /&gt; &lt;!-- Une image stockée sur votre site  --&gt;\n&lt;img src=&quot;https://placekitten.com/300/300&quot; alt=&quot;A cute cat&quot; /&gt; &lt;!-- Une image stockées sur un autre site --&gt;\n \nPour faire un lien vers une autre section de contenu dans une même page voir Scroll to Anchor\nListes §\n&lt;li&gt;List item 1&lt;/li&gt; &lt;!-- Entrée de Liste  --&gt;\n \n&lt;!-- Liste non-ordonnée (à puces) --&gt;\n&lt;ul&gt;\n    &lt;!-- Items  --&gt;\n&lt;/ul&gt; \n \n&lt;!-- Liste ordonnée (à chiffres/lettres, etc.) --&gt;\n&lt;ol&gt;\n    &lt;!-- Items  --&gt;\n&lt;/ol&gt; \n\nOuvrir l&#039;exemple\n&lt;ul&gt;\n    &lt;li&gt;List item 1&lt;/li&gt;\n    &lt;li&gt;List item 2&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ol&gt;\n    &lt;li&gt;List item 1&lt;/li&gt;\n    &lt;li&gt;List item 2&lt;/li&gt;\n&lt;/ol&gt;\n\n\nHead §\n&lt;title&gt;Titre de votre page&lt;/title&gt; &lt;!-- visible dans l&#039;onglet de votre browser --&gt;\n&lt;meta name=“description“ content=“Description de votre site&quot; /&gt;\n&lt;meta name=“keywords“ content=“keywords décrivant votre site“ /&gt;\n&lt;meta charset=&quot;utf-8&quot;&gt;\n&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;\n&lt;!-- Styling --&gt;\n&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style.css&quot;&gt; &lt;!-- Lien vers css externe  --&gt;\n&lt;style&gt;\n    /* Your own custom rules */\n&lt;/style&gt;\n \n &lt;!-- Javascript  --&gt;\n&lt;script src=&quot;some/script.js&quot;&gt;&lt;/script&gt;  &lt;!-- Lien vers js externe  --&gt;\n&lt;script&gt;\n    // Your own Javascript\n&lt;/script&gt;"},"HTML/HTML-Introduction":{"title":"HTML Introduction","links":["CSS","Javascript"],"tags":["essentiels","débutant"],"content":"HTML: Hypertext Markup Language §\nLe HTML, est l’élément de base pour la création d’un site web. Il fait parti des trois languages de programmation pour le web avec le CSS et le Javascript.\nSi l’on utilise la métaphore d’une maison, on peut imaginer les trois langages comme répondant aux affirmations suivantes:\n\nHTML (Hypertext Markup Language): Quelle est la structure de la maison et ce qu’elle contient? Les portes, fenêtres, pièces…\nCSS (Cascading Style Sheets): A quoi ressemble la maison? Les peintures, textiles, revêtements…\nJS (Javascript): Comment utilise-t’on la maison? Le chauffage, la lumière…\n\nEn général, nous utilisons le HTML pour créer une hiérarchie dans la page web en mettant des blocs à l’intérieur d’autres blocs. Ces blocs sont appelés des balises\nBalises §\nLe HTML est constitué de balises de toutes sortes. Selon leur types, elles aident à définir le type de contenu qui se trouve à l’intérieur.\nUn exemple simple d’élément HTML est un titre, écrit comme ceci:\n&lt;h1&gt;Titre&lt;/h1&gt;\n&lt;!-- balise d&#039;ouverture, contenu, balise de fermeture --&gt;\nUne balise html englobe généralement du contenu. On observe donc ci-dessus une balise d’ouverture &lt;h1&gt; et une balise de fermeture &lt;/h1&gt;. Elles sont identiques, sauf que la balise fermante comporte une barre oblique devant son nom.\nCertaines balises se ferment d’eux-mêmes, par exemple une image. Elle ne se compose que d’une seule balise et d’une barre oblique à la fin.\n&lt;img src=&quot;image.jpg&quot; /&gt;\nUn aspect important du HTML est la possibilité d’imbriquer des éléments. Cela signifie que nous pouvons mettre autant qu’on veut de balises à l’intérieur d’autres balises.\n&lt;main&gt;\n  &lt;article&gt;\n    &lt;section&gt;\n      &lt;h1&gt;Titre&lt;/h1&gt;\n    &lt;/section&gt;\n  &lt;/article&gt;\n&lt;/main&gt;\nBalises courantes §\n&lt;h1&gt;, &lt;h2&gt;, &lt;h3&gt;  &lt;!-- Balises de titres--&gt;\n&lt;p&gt;               &lt;!-- Balises de paragraphe--&gt;\n&lt;img&gt;             &lt;!-- Balises d&#039;image--&gt;\n&lt;a&gt;               &lt;!-- Balises de lien--&gt;\n&lt;ul&gt;              &lt;!-- Balises de liste non-ordonnée--&gt;\n&lt;ol&gt;              &lt;!-- Balises de liste ordonnée--&gt;\n&lt;li&gt;              &lt;!-- Balises d&#039;élément de liste--&gt;\n&lt;div&gt;             &lt;!-- Balises de conteneur générique en bloc --&gt;\n&lt;span&gt;            &lt;!-- Balises de conteneur générique en ligne (inline) pour les contenus phrasés--&gt;\n \nHead &amp; Body §\nDans un document HTML, nous devons toujours commencer par définir qu’il s’agit d’un document HTML:\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;fr&quot;&gt;\nAprès la définition, nous pouvons définir la &lt;head&gt;. C’est là que nous mettrons les éléments non visibles d’une page comme le titre d’onglet dans le navigateur, les méta-informations, les liens vers les scripts et les styles.\n&lt;head&gt;\n  &lt;meta charset=&quot;utf-8&quot; /&gt;\n  &lt;title&gt;Mon Premier Site Web&lt;/title&gt;\n&lt;/head&gt;\nEnfin nous avons le &lt;body&gt;. C’est là que nous mettons tous les éléments visibles que nous voulons montrer au visiteur.\n&lt;body&gt;\n  &lt;h1&gt;Mon Premier Site Web&lt;/h1&gt;\n&lt;/body&gt;\n&lt;/html&gt;\nLa définition, la &lt;head&gt; et le &lt;body&gt; sont obligatoires pour toutes les documents HTML.\n\n\n                  \n                  Astuce \n                  \n                \nDans votre editeur du code (Visual Studio Code par exemple), après avoir créé un nouveau fichier html, vous pouvez écrire html:5 ou ! et appuyer sur la touche tab ↹ pour insérer une base de document html.\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n   &lt;meta charset=&quot;UTF-8&quot;&gt;\n   &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\n   &lt;title&gt;Document&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n   \n&lt;/body&gt;\n&lt;/html&gt;\n\nAttributs §\nLes attributs nous permettent d’ajouter des informations spécifiques à une balise. La syntaxe est comme ceci: attribut=&quot;&quot;\nIl existe à la fois des attributs universels qui peuvent être ajoutés à n’importe quelle balise, et des attributs spécifiques qui ne s’appliquent qu’à certaines balises.\nNous pouvons ajouter des identificateurs à chaque balise en utilisant soit une CLASS, soit un ID.\n&lt;h1 id=&quot;logo&quot;&gt;Nom&lt;/h1&gt;\n \n&lt;section class=&quot;news&quot;&gt;1&lt;/section&gt;\n&lt;section class=&quot;news&quot;&gt;2&lt;/section&gt;\n&lt;section class=&quot;news&quot;&gt;3&lt;/section&gt;\nLes ID sont pour des balises uniques qui n’apparaissent qu’une fois dans une page, et les CLASS sont pour les éléments qui apparaissent plusieurs fois mais qui ne contiennent pas le même contenu.\nCertains attributs sont spécifiques aux balises comme les images  et les liens .\n&lt;img src=&quot;file.jpg&quot; /&gt;\n \n&lt;a href=&quot;http://eracom.ch&quot;&gt;ERACOM&lt;/a&gt;\nDans une balise d’image, nous souhaitons créer un lien vers le fichier qu’elle doit afficher avec l’attribut src=&quot;&quot; (source), alors qu’une balise de lien doit contenir le lien vers lequel on se rend lorsqu’on clique dessus avec href=&quot;&quot; (hypertext reference).\nSémantique §\nEn HTML, nous avons ce que nous appelons des balises sémantiques. Cela signifie que la balise est nommée par ce qu’elle est censée contenir. Par exemple &lt;img&gt; est une image, &lt;video&gt; une vidéo, &lt;audio&gt; un audio, etc.\nCela nous permet de mieux comprendre la structure du contenu et aide également les personnes malvoyantes, par exemple, à utiliser le site.\n\n\n&lt;header&gt;\nIci, vous pouvez mettre les éléments que vous souhaitez voir apparaître en haut. Par exemple, un logo ou l’élément de nav.\n\n\n&lt;nav&gt;\nUtilisez ceci pour votre menu ou d’autres éléments de navigation.\n\n\n&lt;main&gt;\nMettez les parties principales de votre site web dans celui-ci.\n\n\n&lt;article&gt;\nMettez les parties principales de votre site web dans celui-ci.\n\n\n&lt;section&gt;\nUtilisez cette fonction pour créer une séparation d’un type de contenu spécifique.\n\n\n&lt;aside&gt;\nUtilisez-le pour le contenu qui est lié à un article mais qui n’est pas le contenu principal.\n\n\n&lt;footer&gt;\nUtilisez-le pour le contenu au bas du site web.\n\n\nVoici une exemple d’une page web qui utilise les balises sémantiques:\n...\n&lt;body&gt;\n  &lt;header&gt;\n    &lt;nav&gt;&lt;/nav&gt;\n  &lt;/header&gt; \n  \n  &lt;main&gt;\n    &lt;article&gt;&lt;/article&gt;\n    &lt;aside&gt;&lt;/aside&gt;\n  &lt;/main&gt; \n  \n  &lt;footer&gt;&lt;/footer&gt; \n&lt;/body&gt;\n&lt;/html&gt;"},"HTML/Scroll-to-Anchor":{"title":"Scroll to Anchor","links":[],"tags":["initié","snippet"],"content":"Une balise de lien peut emmener à différentes partie d’une même page à l’aide d’attributs ID.\nPour cela il faut:\n\nle lien vers l’ancre doit être à l’intérieur d’un élément HTML\nun ID unique attribué à la section de destination\ndans le lien, attribuer comme destination l’ID (href=“#IDdestination”)\n\n&lt;a href=&quot;#id-of-element-to-link-to&quot;&gt;Emmène moi à une autre partie de la page!&lt;/a&gt;\n&lt;div&gt;\n  &lt;p id=&quot;id-of-element-to-link-to&quot;&gt;Une autre partie de la page&lt;/p&gt;\n&lt;/div&gt;\n \n\nBonus §\nDans votre css, appliquez la déclaration suivante sur le parent du lien. Cela permettra de faire un scroll avec transition plutôt qu’un saut instantané dans la page.\n.parent-element-of-link /* ou &#039;*&#039; pour appliquer à toute votre page */ {\n  scroll-behavior: smooth;\n}\nDans des cas plus avancées on peut également faire cela avec du javascript."},"HTML/Search":{"title":"Search","links":[],"tags":["initié","snippet"],"content":"HTML §\n&lt;form&gt;\n  &lt;div&gt;\n    &lt;input type=&quot;search&quot; id=&quot;mySearch&quot; name=&quot;q&quot; /&gt;\n    &lt;button&gt;Search&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/form&gt;\nMDN Web Docs\n"},"HTML/index":{"title":"HTML Index","links":[],"tags":[],"content":""},"commentaires":{"title":"Commenter son code","links":["fichiers-dossiers"],"tags":["essentiels","débutant"],"content":"Il est essentiel et très pratique de commenter son code pour se souvenir de ce qu’il fait, pour soi-même, pour d’autres gens travaillant avec vous.\nCela peut paraitre bête à dire mais bien nommer, ranger son code fait partie des aspects les plus importants.\nPour vous aider, posez-vous toujours la question suivante:\n\n\n                  \n                  Tip \n                  \n                \nEst-ce que moi ou quelqu&#039;un d&#039;autre pourrait comprendre mon code, mes fichiers ou mes dossiers maintenant, dans 1 mois ou dans 5 ans?\n\nPlus d’infos sur l’organisation de vos fichiers et dossiers\nCommentaires HTML §\n&lt;!-- Ceci est une balise de commentaire HTML --&gt;\n \n&lt;!-- &lt;p&gt;hello world!&lt;/p&gt; --&gt;\n \n\nCommentaires CSS §\n/* Ceci est une balise de commentaire CSS */\n \nbody {\n  /*background: red;*/\n}\n \n\nCommentaires JS §\n// Ceci est un commentaire expliquant le rôle de l&#039;instruction\n \n/* Ceci est une balise de commentaire JS sur une ligne */\n \n/* Ceci est une balise de commentaire JS \nsur plusieurs \nlignes */\n \n \n\nIndenter son code §\nPeu importe le langage utilisé, le code doit toujours être indenté à chaque nouveau d’imbrication.\nVous pouvez indenter une ligne ou une sélection de lignes en appuyant sur la touche tab.\nÀ l’inverse pour désindenter, vous pouvez appuyer sur shift + tab.\nPar convention, une indentation comporte 2 ou 4 espaces.\n&lt;div&gt;\n  &lt;h1&gt;Heading&lt;/h1&gt;\n \n  &lt;ul&gt;\n    &lt;li&gt;Item 1&lt;/li&gt;\n    &lt;li&gt;Item 2&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/div&gt;"},"dev-tools":{"title":"Outils de développement (Chrome)","links":[],"tags":["essentiels","débutant"],"content":"Les outils de développement permettent de voir, altérer le code HTML, CSS et Javascript affiché dans votre navigateur. Pendant le développement d’un site il est toujours utile, d’avoir ces outils ouvert, pour vous aider à identifier des potentielles erreurs.\nAttention toutefois, les modifications faites dans l’inspecteur ne s’applique que dans votre navigateur. Si vous rechargez l’onglet inspecté ayant des modifications, celles-ci s’effacent.\nAccéder aux outils de développement §\n\nMenu Afficher &gt; Options pour les développeurs &gt; Examiner les éléments (Alternativement: cmd + opt + c)\nClic droit sur n’importe quel endroit d’une page, puis Inspecter l&#039;élément\n\n"},"fichiers-dossiers":{"title":"Organiser ses fichiers et dossiers","links":[],"tags":["essentiels","débutant"],"content":"Noms de fichiers §\n\n\nDates en AAAAMMJJ\nUtiliser le format de dates suivant: AAAAMMJJ.\nCela permet d’avoir les fichiers toujours ordonnés chronologiquement.\nExemple: 20231003-fichier\n\n\n\nEviter les caractères spéciaux\n~!@#$%^&amp;*()`;&lt;&gt;?,[]{}‘“\n\n\n\nPour des fichiers séquencés, utiliser des préfixes 0 pour vous assurer du bon ordre.\n01, 02, 03 … 13 etc.\n\n\n\nNe pas utiliser d’espaces.\nCela peut ne pas être reconnu par certains systèmes d’exploitations.\nA la place, veuillez utiliser des tirets -, des underscores _ ou du camelCase.\n\nNoms de dossiers §\n\n\nUn dossier par projet\nUn sous-dossier par cours\ndans chaque sous-dossier, vos fichiers html/css, fonts, etc.\n\n\n\n                  \n                  Tip \n                  \n                \nIl n’y a pas une bonne manière de faire, trouvez la vôtre et faites en sorte qu’elle reste consistente.\n"},"impressum":{"title":"Impressum","links":[],"tags":[],"content":"Ce site est conçu avec  Quartz 4 by Jzhao, en utilisant D3.js.\nCSS custom par moi-même."},"index":{"title":"Hello World","links":["HTML/HTML-Introduction","CSS/CSS-Introduction","tags/débutant","tags/essentiels"],"tags":[],"content":"Ce site compile des ressources éduvatives dans le cadre de mon enseignement à l’ERACOM pour le cours multimédias visant à la conception graphique de médias numériques.\nCes apprentissages permettront pour des élèves en graphisme de créer des sites internet avec du code, en se concentrant sur la partie graphique et le design d’intéractions.\nRegardez bien la documentation et servez-vous des blocs de code dans vos projets en vous aidant des commentaires notés dans le code pour veiller à une bonne compréhension.\nVous pouvez également rechercher par tags ou dans la barre de recherche des pages spécifiques.\nPour vous nourrir de références graphiques je vous conseille d’utiliser la plateforme Are.na. Je met à jour régulièrement des références de site web sur mon profil parmi d’autres ressources.\nPour toutes questions ou remarques, n’hésitez pas à me contacter par email\nQuelques points de départ:\nHTML IntroductionCSS Introduction\nDébutant Essentiels"}}